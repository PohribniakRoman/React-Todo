{"version":3,"sources":["components/Login.jsx","components/Logout.jsx","components/Stat.jsx","components/TodoItem.jsx","App.jsx","index.js"],"names":["Login","changeStatus","useState","field","updateField","Form","className","onSubmit","event","preventDefault","trim","localStorage","setItem","alert","Label","InputGroup","Control","required","value","placeholder","onChange","target","Button","type","variant","id","Logout","onClick","removeItem","getItem","Stat","todo","Alert","filter","todoItem","isDone","length","style","marginLeft","TodoItem","data","deleteItem","title","Badge","date","name","addTask","e","user","update","inputData","updateInputData","cuurentData","moment","format","JSON","stringify","App","updateStorage","StoredData","parse","isLogined","updateLogin","useEffect","console","log","map","updatedTodos","tI","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.18baefbd.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button, Form, InputGroup } from \"react-bootstrap\";\r\n\r\nexport default function Login( {changeStatus} ) {\r\n    const [field, updateField] = useState(\"\");\r\n    return(\r\n      <Form className=\"login\" onSubmit={(event)=>{\r\n        event.preventDefault();\r\n        if(field.trim()){\r\n          changeStatus(true);\r\n          localStorage.setItem(\"user\", field.trim());\r\n          updateField(\"\");\r\n        }else{\r\n          alert(\"Write your name\")\r\n        }\r\n      }}>\r\n      <Form.Label>Log in</Form.Label>\r\n        <InputGroup className=\"mb-3\">\r\n          <Form.Control\r\n            required\r\n            value={field}\r\n            placeholder=\"User name\"\r\n            onChange={(event) => {\r\n              updateField(event.target.value);\r\n            }}/>\r\n          <Button type=\"submit\" variant=\"outline-secondary\" id=\"button-addon2\">\r\n            log in\r\n          </Button>\r\n        </InputGroup>\r\n    </Form>\r\n\r\n    )\r\n}","import {BsDoorOpen} from 'react-icons/bs';\r\n\r\n\r\nexport default function Logout({changeStatus}) {\r\n  return (\r\n    <div className=\"name\">\r\n      <div className='name--logout' onClick={() => {\r\n          changeStatus(false);\r\n          localStorage.removeItem(\"user\");\r\n        }}><BsDoorOpen/></div>\r\n      <div className=\"name--label\">{localStorage.getItem('user')}</div>\r\n    </div>\r\n  );\r\n}\r\n","import { Alert } from 'react-bootstrap';\r\nimport {BsCheck2All} from 'react-icons/bs';\r\nimport {RxCross1} from 'react-icons/rx';\r\nexport default function Stat({todo}) {\r\n  return (\r\n    <section className='stat'>\r\n      <Alert variant='success'>\r\n        <BsCheck2All/><b>{todo.filter((todoItem) => todoItem.isDone).length}</b>\r\n      </Alert>\r\n      <Alert style={{marginLeft:\"30px\"}} variant='warning'>\r\n        <RxCross1/>\r\n        <b>{todo.filter((todoItem) => !todoItem.isDone).length}</b>\r\n      </Alert>\r\n    </section>\r\n  );\r\n}\r\n","import { Alert, Badge,  } from \"react-bootstrap\";\r\nimport {BsTrash} from 'react-icons/bs';\r\nimport {BsCheck2All} from 'react-icons/bs';\r\nimport {RxCross1} from 'react-icons/rx';\r\n\r\nexport default function TodoItem({ data, changeStatus, deleteItem }) {\r\n  return (\r\n      <Alert className=\"todo\" variant={data.isDone?\"success\":\"warning\"}>\r\n        <h5>\r\n          {data.title}<Badge>{data.date}</Badge>\r\n        </h5>\r\n        <div>{`Creator:${data.name}`}</div>\r\n        <div className=\"controls\">\r\n          <div onClick={changeStatus}>{data.isDone?<BsCheck2All/>:<RxCross1/>} </div>\r\n          <div onClick={deleteItem}> <BsTrash/></div>\r\n        </div>\r\n      </Alert>\r\n  );\r\n}\r\n","import moment from \"moment/moment\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Button, Form, InputGroup } from \"react-bootstrap\";\r\nimport Login from \"./components/Login\";\r\nimport Logout from \"./components/Logout\";\r\nimport Stat from \"./components/Stat\";\r\nimport TodoItem from \"./components/TodoItem\";\r\nimport \"./styles/style.css\";\r\n\r\n\r\n\r\n\r\nconst addTask = (e,user,update,todo,inputData,updateInputData) => {\r\n  e.preventDefault();\r\n  if(inputData.trim()){\r\n  const cuurentData = [\r\n    ...todo,\r\n    {title:inputData, id: todo.length, date: moment().format('LTS'),name:user},\r\n  ]\r\n  updateInputData(\"\");\r\n  update(cuurentData);\r\n  localStorage.setItem(\r\n    \"Todos\",\r\n    JSON.stringify(cuurentData)\r\n  );\r\n  }else{\r\n    alert(\"Write task name\")\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  const updateStorage = (data) =>{\r\n    localStorage.setItem(\"Todos\", JSON.stringify(data));\r\n  } \r\n  const user = localStorage.getItem(\"user\");\r\n  const StoredData = JSON.parse(localStorage.getItem(\"Todos\"));\r\n\r\n  const [isLogined, updateLogin] = useState(false);\r\n  const [todo, update] = useState([]);\r\n  const [inputData,updateInputData] = useState('');\r\n  useEffect(()=>StoredData !== null?update(StoredData):null,[])\r\n  useEffect(()=>user!==null?updateLogin(true):null,[])\r\n  console.log(user);  \r\n  return (\r\n    <>\r\n      {isLogined ? (\r\n        <Logout changeStatus={updateLogin} />\r\n      ) : (\r\n        <Login changeStatus={updateLogin} />\r\n      )}\r\n    <div className={isLogined ? \"\" : \"none\"}>\r\n      <Form className=\"form\" onSubmit={(e)=>addTask(e,user,update,todo,inputData,updateInputData)}>\r\n        <Form.Label>Add task</Form.Label>\r\n          <InputGroup className=\"mb-3\">\r\n            <Form.Control\r\n              required\r\n              value={inputData}\r\n              placeholder=\"task name\"\r\n              onChange={(e)=>updateInputData(e.target.value)}/>\r\n            <Button type=\"submit\" variant=\"outline-secondary\" id=\"button-addon2\">\r\n              Add\r\n            </Button>\r\n          </InputGroup>\r\n      </Form>\r\n      <ul>\r\n        {todo.map(todoItem => {\r\n          return (\r\n            <TodoItem\r\n              key={todoItem.id}\r\n              data={todoItem}\r\n              changeStatus={() => {\r\n                todo[todoItem.id].isDone = !todoItem.isDone;\r\n                update([...todo]);\r\n                updateStorage(todo);\r\n              }}\r\n              deleteItem={() => {\r\n                const updatedTodos = todo.filter((tI) => {\r\n                  return tI.id !== todoItem.id;\r\n                });\r\n                update(updatedTodos);\r\n                updateStorage(updatedTodos);\r\n              }}\r\n            />\r\n          );\r\n        })}\r\n      </ul>\r\n      <Stat todo={todo} />\r\n    </div>\r\n    </>\r\n  );\r\n}\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}